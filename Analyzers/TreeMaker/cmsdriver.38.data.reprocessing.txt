//-- look at: https://twiki.cern.ch/twiki/bin/view/CMS/RecoDataReProcessing#3_8_Bases_Reprocessing

cmsDriver.py reco -s RAW2DIGI,L1Reco,RECO  --data --magField AutoFromDBCurrent --scenario pp --datatier RECO 
--eventcontent RECO --customise Configuration/GlobalRuns/reco_TLR_38X.py --cust_function customisePPData 
--python_filename=rereco_Collision_38X.py --conditions auto:com10 --process RERECO
--filein dcap://maite.iihe.ac.be/pnfs/iihe/cms/store/user/roland/MinimumBias/Run2010B-v1/RAW/04FE5838-08C9-DF11-B14D-000423D9890C.root
-n 1000 --no_exec

add:
----

// Indeed, we have indications that the contamination
// of collision is completely dominating any triggers that
// we used at low luminosity to identify background
// (even with the beam halo trigger timing).

// The recommendation to avoid background is therefore
// to ask for the (usual) good vertex and selection on the rate
// of high purity tracks. 

// On the other hand, even this selection
// has not been checked recently, so if anybody is using it
// and has rejection factors it would be interesting to know.

process.options = cms.untracked.PSet(wantSummary = cms.untracked.bool(True))

process.source = cms.Source("PoolSource",
    fileNames = cms.untracked.vstring('...'),
    lumisToProcess = cms.untracked.VLuminosityBlockRange('146644:1034-146644:2179')                            
)

# selection on the rate of high purity tracks (scraping events rejection)
process.noscraping = cms.EDFilter("FilterOutScraping",
           applyfilter = cms.untracked.bool(True),
           debugOn = cms.untracked.bool(False),
           numtrack = cms.untracked.uint32(10),
           thresh = cms.untracked.double(0.25))

# good primary vertex selection
process.oneGoodVertexFilter = cms.EDFilter("VertexSelector",
   src = cms.InputTag("offlinePrimaryVertices"),
   cut = cms.string("!isFake && ndof >= 5 && abs(z) <= 24 && position.Rho <= 2"), # tracksSize() > 3 for the older cut
   filter = cms.bool(True),   # otherwise it won't filter the events, just produce an empty vertex collection.
)

# Output definition
fileName = cms.untracked.string('rereco_RAW2DIGI_L1Reco_RECO.root'),

// Trigger
// Filtering is pretty easy to do in the config file 
// to select the OR of several triggers you can do something like this:

import FWCore.ParameterSet.Config as cms
import copy

# Trigger
from HLTrigger.HLTfilters.hltHighLevel_cfi import *
process.hltFilter = copy.deepcopy(hltHighLevel)
process.hltFilter.TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
process.hltFilter.HLTPaths = ['HLT_L1Tech_BSC_minBias','HLT_L1Tech_BSC_minBias_OR','HLT_MinBiasPixel_SingleTrack','HLT_ZeroBias','HLT_ZeroBiasPixel_SingleTrack']
process.hltFilter.throw = cms.bool(False) # it won't crash if one of the triggers is missing

# Jet Selection
# process.TFileService = cms.Service("TFileService",fileName = cms.string("rereco_Central_Jet.root"))

# Disable the use of CondDB in your configuration file (during the transition period, the txt files are still in CVS)
process.load('JetMETCorrections.Configuration.DefaultJEC_cff')
process.ak5PFL2Relative.useCondDB = False
process.ak5PFL3Absolute.useCondDB = False
process.ak5PFResidual.useCondDB = False

# PFJet Dijet Selection
process.pfdijetSelector7TeV = cms.EDProducer('CentralDiPFJetProducer7TeV',
    PFJetCorrector = cms.string('ak5PFL2L3'),
    PFJets = cms.InputTag('ak5PFJets', '', 'RERECO'),
    NHFCutUp = cms.double(0.9),
    NEFCutUp = cms.double(0.9),
    CHFCutLow = cms.double(0.0),
    CEFCutUp = cms.double(1.0),
    NumConstituentsCutLow = cms.int32(0),
    ChargedMultiplicityCutLow = cms.int32(0),
    JetPtCut = cms.double(5),
    JetEtaCut = cms.double(2.5))

# PFJet Inclusive Selection
process.pfmonojetSelector7TeV = cms.EDProducer('CentralMonoPFJetProducer7TeV',
    PFJetCorrector = cms.string('ak5PFL2L3'),
    PFJets = cms.InputTag('ak5PFJets', '', 'RERECO'),
    NHFCutUp = cms.double(0.9),
    NEFCutUp = cms.double(0.9),
    CHFCutLow = cms.double(0.0),
    CEFCutUp = cms.double(1.0),
    NumConstituentsCutLow = cms.int32(0),
    ChargedMultiplicityCutLow = cms.int32(0),
    JetPtCut = cms.double(5),
    JetEtaCut = cms.double(2.5))

# GT - RawToDigi - Castor Digi
# process.load('Configuration.StandardSequences.FrontierConditions_GlobalTag_cff')  // created by the cmsDriver
# process.load("Configuration.StandardSequences.RawToDigi_cff")                     // created by the cmsDriver
# process.GlobalTag.globaltag = 'GR10_P_V4::All'                                    // created by the cmsDriver
process.castorDigis.InputLabel = 'source'

# final tree
process.TFileService = cms.Service("TFileService",fileName = cms.string("rereco_CASTOR_Central_Jet.root"))

process.treemaker7TeVRun2010 = cms.EDAnalyzer('TreeMaker7TeVRun2010',
      L1Trigger = cms.InputTag('gtDigis', '', 'RERECO'),
      HLTriggerResults = cms.InputTag( 'TriggerResults','','HLT' ),

      PFJetCorrector = cms.string('ak5PFL2L3'),
      PFJets = cms.InputTag('ak5PFJets', '', 'RERECO'),         
   
      CastorDigis = cms.InputTag('castorDigis', '', 'RERECO'),
      PrimaryVertexColl = cms.InputTag('offlinePrimaryVertices','','RERECO'),    
      BeamSpot = cms.InputTag('offlineBeamSpot','','RERECO'),

      HepMCColl = cms.InputTag('generator','','HLT'),
      GenPartColl = cms.InputTag('genParticles','','HLT'),

      Grid = cms.untracked.bool(False),
      CentralInfo = cms.untracked.bool(False),
      MCInfo = cms.untracked.bool(False)
)

# Path and EndPath definitions
#process.raw2digi_step = cms.Path(process.RawToDigi)
#process.L1Reco_step = cms.Path(process.L1Reco)
#process.reconstruction_step = cms.Path(process.reconstruction)
#process.endjob_step = cms.Path(process.endOfProcess)
#process.RECOoutput_step = cms.EndPath(process.RECOoutput)

# Schedule definition
#process.schedule = cms.Schedule(process.raw2digi_step,process.L1Reco_step,process.reconstruction_step,process.endjob_step,process.RECOoutput_step)

process.p = cms.Path(process.RawToDigi*process.L1Reco*process.reconstruction*
		     process.hltFilter*process.oneGoodVertexFilter*process.noscraping*
		     process.pfdijetSelector7TeV*process.pfmonojetSelector7TeV*
                     process.endOfProcess*process.treemaker7TeVRun2010)
		   # process.endOfProcess*process.RECOoutput)


